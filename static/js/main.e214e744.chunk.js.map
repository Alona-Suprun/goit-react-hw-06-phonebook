{"version":3,"sources":["components/FilterContacts/FilterContacts.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","s","contactsActions","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","filterContacts","getContacts","state","contacts","items","getFilter","filter","getContactsList","normalizedFilter","toLowerCase","includes","Button","onClick","allyProps","button","defaultProps","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","inputChange","e","target","value","form","onSubmit","preventDefault","existingName","find","prevContact","alert","label","placeholder","input","type","pattern","required","onChange","Contact","onDeleteContact","li","ContactList","map","FilterContact","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e214e744.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__NDwkW\",\"input\":\"FilterContacts_input__6fcRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__V0cwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lEM8\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/delete');\r\n\r\nconst filterContacts = createAction('contact/filterContacts');\r\n\r\nconst contactsActions = { addContact, deleteContact, filterContacts };\r\nexport default contactsActions;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsList = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    const existingName = contacts.find(\r\n      prevContact => prevContact.name === name,\r\n    );\r\n    if (existingName) {\r\n      alert(`${existingName.name} is already in contact list`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={formSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          placeholder=\"type number\"\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport Button from '../Button/Button';\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.li}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n      <Button className={s.button} onClick={onDeleteContact}>\r\n        Delete\r\n      </Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { getContactsList } from '../../redux/contacts/contacts-selectors';\r\nimport Contact from './Contact';\r\n\r\nconst ContactList = ({ name, number }) => {\r\n  const contacts = useSelector(getContactsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport s from './FilterContacts.module.css';\r\n\r\nconst FilterContact = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e =>\r\n    dispatch(contactsActions.filterContacts(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          title=\"Search contacts\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterContact;\r\n","import Section from './components/Section/Section';\nimport Form from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport FilterContact from './components/FilterContacts/FilterContacts';\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__22VR5\",\"label\":\"ContactForm_label__2ty0K\",\"input\":\"ContactForm_input__1Q24D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__KfZm-\",\"item\":\"ContactList_item__2c7xI\"};"],"sourceRoot":""}